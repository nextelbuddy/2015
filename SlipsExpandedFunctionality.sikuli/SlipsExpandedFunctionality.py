from sikuli import*
import CreateCalendarEntry
import OpenOldSlipEntry
import TABFunction
def ts_expanded_functions():

        #-----This script assumes default preferences are set and used-----#
        #-----This script requires all NN2 to be reset to 2 before running-----# 
        #-----this script requires 3 slips with ID 1, 2 and 3 to exists first prior to running-----#
        #-----section below is only for initial testing to reset slip ID to 4-----#
    """
    type("p", KeyModifier.ALT)
    type("g")
    wait(Pattern("FirmAddrcssI.png").similar(0.93))
    type(Key.F6, KeyModifier.SHIFT)
    type(Key.F6, KeyModifier.SHIFT)
    type(Key.F6, KeyModifier.SHIFT)
    type(Key.F6, KeyModifier.SHIFT)
    type("4")
    type(Key.ENTER)
    type("y")
    waitVanish(Pattern("Transactions.png").similar(0.87))
        #-----section above is only for initial testing to reset slip ID to 4-----#
        
        #-----Section below is only for initial testing to reset NN2s to ID 2 -----#
    type("p", KeyModifier.ALT)
    type("g")
    wait(Pattern("FirmAddrcssI.png").similar(0.93))
    type(Key.F6)
    type(Key.F6)
    type(Key.F6)
    type(Key.F6)
    type(Key.F6)
    type(Key.F6)  
    wait(.5)
    type("f", KeyModifier.ALT)
    for x in range(1, 5):
        TABFunction.tab(x)
    paste("2")
    for x in range(1, 6):
        TABFunction.tab(x)
    paste("2")
    for x in range(1, 6):
        TABFunction.tab(x)
    paste("2")
    type(Key.ENTER)
    wait("Ycuhavesetth.png")
    type("y")
    wait("Youhavesetth.png")
    type("y")
    wait("Youhavesetth-1.png")
    type("y")    
    waitVanish(Pattern("NamesNicknam.png").similar(0.92))  
    
       #-----Section below is only for initial testing to reset NN2s to ID 2 -----#

       
    OpenOldSlipEntry.open_slip_old()
    
        #-----section tests edit mode on slip type toggle-----#
    assert exists(Pattern("SlipEntry-1.png").similar(0.98))
    wait(.5)
    type("e")
    wait(.5)
    assert exists(Pattern("OldSiEntrv.png").similar(0.94))
    wait(.5)
    type("t")
    type(Key.TAB)
        #-----section tests and asserts shortcuts for TK options-----#
    keyDown(Key.SHIFT)
    keyDown(Key.CTRL)
    type("n")
    keyUp(Key.SHIFT)
    keyUp(Key.CTRL)
    wait(Pattern("TimekeeperIn.png").similar(0.93))
    assert exists(Pattern("TimekeeperIn.png").similar(0.93))
    wait(.5)
    paste("Slip Extended Funct TK")
    wait(.5)
    type("s", KeyModifier.CTRL)
    wait(.5)
    keyDown(Key.SHIFT)
    keyDown(Key.CTRL)
    type("o")
    keyUp(Key.SHIFT)
    keyUp(Key.CTRL)
    wait(Pattern("ISlipExtende.png").similar(0.93))
    assert exists(Pattern("ISlipExtende.png").similar(0.93))
    type(Key.F4, KeyModifier.CTRL)
    waitVanish(Pattern("TimekeeperIn.png").similar(0.93))
    assert exists(Pattern("SlipExtended-1.png").similar(0.93))
    wait(.5)
    keyDown(Key.SHIFT)
    keyDown(Key.CTRL)
    type("2")
    keyUp(Key.SHIFT)
    keyUp(Key.CTRL)
    wait(.5)
    assert not exists(Pattern("SlipExtended-1.png").similar(0.93))
    wait(.5)
    keyDown(Key.SHIFT)
    keyDown(Key.CTRL)
    type("1")
    keyUp(Key.SHIFT)
    keyUp(Key.CTRL)
    wait(.5)   
    assert exists(Pattern("SlipExtended-1.png").similar(0.93))
    type(Key.TAB)
        #-----section tests and asserts Activity options-----#
    wait(.5)
    keyDown(Key.SHIFT)
    keyDown(Key.CTRL)
    type("n")
    keyUp(Key.SHIFT)
    keyUp(Key.CTRL)
    wait(1)
    assert exists(Pattern("TaskInformat.png").similar(0.94))
    wait(.5)
    paste("Slip Extended Funct Task")
    type("s", KeyModifier.CTRL)
    wait(.5)
    keyDown(Key.SHIFT)
    keyDown(Key.CTRL)
    type("o")
    keyUp(Key.SHIFT)
    keyUp(Key.CTRL)
    wait(1)
    assert exists(Pattern("IElipExtende.png").similar(0.95))
    wait(1)
    type(Key.F4, KeyModifier.CTRL)
    wait(.5)
    keyDown(Key.SHIFT)
    keyDown(Key.CTRL)
    type("m")
    keyUp(Key.SHIFT)
    keyUp(Key.CTRL)
    wait(1)
    rightClick(Pattern("SlipExtended.png").similar(0.95))
    assert exists(Pattern("MV.png").similar(0.80))
    type(Key.ESC)
    keyDown(Key.SHIFT)
    keyDown(Key.CTRL)
    type("a")
    keyUp(Key.SHIFT)
    keyUp(Key.CTRL)
    wait(.5)
    rightClick(Pattern("Ill.png").similar(0.96))
    assert exists(Pattern("AIIT.png").similar(0.82))
    type(Key.ESC)
    wait(.5)
    keyDown(Key.SHIFT)
    keyDown(Key.CTRL)
    type("2")
    keyUp(Key.SHIFT)
    keyUp(Key.CTRL)
    wait(1)
    rightClick(Pattern("jhSlipExtend.png").similar(0.96))
    wait(.5)
    assert exists(Pattern("Nickname2-1.png").similar(0.79))
    type(Key.ESC)
    wait(.5)
    keyDown(Key.SHIFT)
    keyDown(Key.CTRL)
    type("1")
    keyUp(Key.SHIFT)
    keyUp(Key.CTRL)
    wait(1)
    rightClick(Pattern("SlipExtended-2.png").similar(0.94))
    wait(.5)
    assert exists(Pattern("Nicknamel-1.png").similar(0.83))
    type(Key.ESC) 
    wait(.5)
    keyDown(Key.SHIFT)
    keyDown(Key.CTRL)
    type("4")
    keyUp(Key.SHIFT)
    keyUp(Key.CTRL)
    wait(.5)
    rightClick(Pattern("nil.png").similar(0.94))
    wait(.5)
    assert exists(Pattern("Exuense.png").similar(0.91))
    type(Key.ESC)
    wait(.5)
    keyDown(Key.SHIFT)
    keyDown(Key.CTRL)
    type("3")
    keyUp(Key.SHIFT)
    keyUp(Key.CTRL)
    wait(.5)
    rightClick(Pattern("nil-1.png").similar(0.91))
    wait(.5)
    assert exists(Pattern("Task.png").similar(0.94))
    wait(.5)
    type(Key.ESC)
    wait(.5)
    rightClick(Pattern("nil-2.png").similar(0.93))  
    wait(.5)
    assert exists(Pattern("OenShlftCtrI.png").similar(0.94))
    wait(.5)
    type(Key.ESC)
    type("Slip Extended Funct Task")
    type(Key.ENTER)
        #-----Section below tests and asserts client options-----#
    wait(.5)
    type(Key.TAB)
    keyDown(Key.SHIFT)
    keyDown(Key.CTRL)
    type("n")
    keyUp(Key.SHIFT)
    keyUp(Key.CTRL)
    wait(1)
    assert exists(Pattern("ClientInform.png").similar(0.93))
    wait(.5)
    paste("Slip Extended Funct Client")
    wait(.5)
    type(Key.ENTER)
    type(Key.F6)
    wait(Pattern("Hatetable.png").similar(0.96))
    paste("100")
    type(Key.TAB)
    paste("200")
    wait(.5)
    keyDown(Key.SHIFT)
    for x in range(1, 7):
        TABFunction.tab(x)
    keyUp(Key.SHIFT)
    type(Key.DOWN)
    keyDown(Key.SHIFT)
    for x in range(1, 3):
        TABFunction.tab(x)
    keyUp(Key.SHIFT)
    type(Key.SPACE)
    wait(Pattern("vhentheslipm.png").similar(0.94))
    type(Key.TAB)
    type(Key.DOWN)
    type(Key.DOWN)
    type(Key.TAB)
    type(Key.DOWN)
    type(Key.DOWN)
    type(Key.TAB)
    type("c")
    type(Key.TAB)
    type(Key.DOWN)
    type(Key.TAB)
    type(Key.ENTER)
    waitVanish(Pattern("hentheslipma.png").similar(0.93))   
    type("s", KeyModifier.CTRL)
    waitVanish(Pattern("1353363732699.png").similar(0.94))
    keyDown(Key.SHIFT)
    keyDown(Key.CTRL)
    type("o")
    keyUp(Key.SHIFT)
    keyUp(Key.CTRL)
    wait(.5)
    assert exists(Pattern("ISlipExtende-1.png").similar(0.95))
    wait(.5)
    type(Key.F4, KeyModifier.CTRL)
    wait(.5)
    keyDown(Key.SHIFT)
    keyDown(Key.CTRL)
    type("m")
    keyUp(Key.SHIFT)
    keyUp(Key.CTRL)
    wait(1)
    rightClick(Pattern("SlipExtended-3.png").similar(0.95))
    assert exists(Pattern("MyCl.png").similar(0.91))
    type(Key.ESC)
    keyDown(Key.SHIFT)
    keyDown(Key.CTRL)
    type("a")
    keyUp(Key.SHIFT)
    keyUp(Key.CTRL)
    wait(.5)
    rightClick(Pattern("SlipExtended-3.png").similar(0.95))
    assert exists(Pattern("AllCI.png").similar(0.92))
    type(Key.ESC)
    wait(.5)
    keyDown(Key.SHIFT)
    keyDown(Key.CTRL)
    type("2")
    keyUp(Key.SHIFT)
    keyUp(Key.CTRL)
    wait(1)
    rightClick(Pattern("jhSlipExtend-1.png").similar(0.96))
    wait(.5)
    assert exists(Pattern("Nickname2-1.png").similar(0.79))
    type(Key.ESC)
    wait(.5)
    keyDown(Key.SHIFT)
    keyDown(Key.CTRL)
    type("1")
    keyUp(Key.SHIFT)
    keyUp(Key.CTRL)
    wait(1)
    rightClick(Pattern("SlipExtended-3.png").similar(0.95))
    wait(.5)
    assert exists(Pattern("Nicknamel-1.png").similar(0.83))
    type(Key.ESC)
    wait(.5)
        #-----Section below tests and asserts references-----# 
    type(Key.TAB)
    keyDown(Key.SHIFT)
    keyDown(Key.CTRL)
    type("n")
    keyUp(Key.SHIFT)
    keyUp(Key.CTRL)
    wait(1)
    assert exists(Pattern("ReferenceEnt.png").similar(0.94))
    wait(.5)
    paste("Slip Extended Funct Reference")
    type(Key.ENTER)
    waitVanish(Pattern("ReferenceEnt.png").similar(0.94))
    keyDown(Key.SHIFT)
    keyDown(Key.CTRL)
    type("o")
    keyUp(Key.SHIFT)
    keyUp(Key.CTRL)
    wait(1)
    assert exists(Pattern("ISIIEExtende.png").similar(0.97))
    wait(1)
    type(Key.ESC)
    wait(.5)
    keyDown(Key.SHIFT)
    keyDown(Key.CTRL)
    type("2")
    keyUp(Key.SHIFT)
    keyUp(Key.CTRL)
    wait(1)
    rightClick(Pattern("jhSlipExtend-2.png").similar(0.94))
    wait(.5)
    assert exists(Pattern("Nickname2-1.png").similar(0.79))
    type(Key.ESC)
    wait(.5)
    keyDown(Key.SHIFT)
    keyDown(Key.CTRL)
    type("1")
    keyUp(Key.SHIFT)
    keyUp(Key.CTRL)
    wait(1)
    rightClick(Pattern("SlipExtended-4.png").similar(0.96))
    wait(.5)
    assert exists(Pattern("Nicknamel-1.png").similar(0.83))
    type(Key.ESC)
    wait(.5)
        #-----section below tests date options-----#
    type(Key.TAB)
    type(Key.TAB)
    type(Key.TAB)
    paste("6/23/2020")
    wait(.5)
    assert exists(Pattern("B232U2UStart.png").similar(0.92))
    wait(.5)
    type("t")
    wait(.5)
    assert not exists(Pattern("B232U2UStart.png").similar(0.92))
    wait(.5)
    type(Key.TAB)
    paste("6/23/2020")
    wait(.5)
    assert exists(Pattern("B232U2UEndda.png").similar(0.94))
    wait(.5)
    type("t")
    wait(.5)
    assert not exists(Pattern("B232U2UEndda.png").similar(0.94))
    wait(.5)
    type(Key.TAB)
    wait(.5)
        #-----section below tests/asserts time spent/estimated/timer options-----#
    type("+", KeyModifier.SHIFT)
    wait(.5)
    assert exists(Pattern("TimeRange.png").similar(0.96))
    type(Key.ESC)
    wait(.5)
    type(Key.TAB)
    type("+", KeyModifier.SHIFT)
    wait(.5)
    assert exists(Pattern("TimeRange.png").similar(0.96))
    wait(.5)
    type(Key.ESC)
    type(Key.F5)
    assert exists(Pattern("UnUff-3.png").similar(0.96))
    wait(.5)
    type(Key.F5)
    assert exists(Pattern("UnUff-2.png").similar(0.96))
    wait(.5)
        #-----section below begins tests on standard "EDIT" right click pop up menu options-----#
    for x in range(1, 6):
        TABFunction.tab(x)
    type(Key.UP)
    wait(.5)
    assert not exists(Pattern("l2Client.png").similar(0.96))
    keyDown(Key.SHIFT)
    keyDown(Key.CTRL)
    type("l")
    keyUp(Key.SHIFT)
    keyUp(Key.CTRL)
    assert exists(Pattern("lliElQian.png").similar(0.92))
    wait(.5)
    keyDown(Key.SHIFT)
    keyDown(Key.CTRL)
    type("u")
    keyUp(Key.SHIFT)
    keyUp(Key.CTRL)
    wait(.5)
    assert exists(Pattern("l2Qian.png").similar(0.94))
    wait(.5)
        #-----section below tests standard right click options  -----#
    type("l", KeyModifier.CTRL)
    wait(Pattern("TimeandExpen-1.png").similar(0.94))
    assert exists(Pattern("ViewByD.png").similar(0.96))
    type(Key.F4, KeyModifier.CTRL)
    waitVanish(Pattern("ViewByD.png").similar(0.96))
        #-----have to test save shortcut first to avoiding "save" pop up from occuring when changing pages with other shortcuts----#
    type("s", KeyModifier.CTRL)
    waitVanish(Pattern("IDNew-2.png").similar(0.81))
    assert not exists(Pattern("IDNew-2.png").similar(0.81))
    wait(.5)
    type(Key.PAGE_UP, KeyModifier.CTRL)
    assert exists(Pattern("ID-2.png").similar(0.96))
    wait(.5)
    type(Key.PAGE_DOWN, KeyModifier.CTRL)
    assert exists(Pattern("ID-1.png").similar(0.96))
    wait(.5)
    type(Key.PAGE_UP)
    assert exists(Pattern("ID-3.png").similar(0.96))
    wait(.5)
    type(Key.PAGE_DOWN)
    assert exists(Pattern("ID-1.png").similar(0.96))
    wait(.5)
    keyDown(Key.SHIFT)
    keyDown(Key.CTRL)
    type("g")
    keyUp(Key.SHIFT)
    keyUp(Key.CTRL)
    wait(.5)
    assert exists(Pattern("IaiiEMovetoI.png").similar(0.94))
    wait(.5)
    type(Key.TAB)
    type("1")
    type(Key.ENTER)
    waitVanish(Pattern("MovetoglipMo.png").similar(0.94))
    assert exists(Pattern("ID-2.png").similar(0.96))
    wait(.5)
    keyDown(Key.SHIFT)
    keyDown(Key.CTRL)
    type("g")
    keyUp(Key.SHIFT)
    keyUp(Key.CTRL)
    wait(.5)
    type(Key.TAB)
    type(Key.TAB)
    type(Key.UP)
    type(Key.ENTER)
    waitVanish(Pattern("MovetoglipMo-1.png").similar(0.94))
    assert exists(Pattern("ID-4.png").similar(0.96))
    wait(.5)
    keyDown(Key.SHIFT)
    keyDown(Key.CTRL)
    type("f")
    keyUp(Key.SHIFT)
    keyUp(Key.CTRL)
    wait(Pattern("Theselection.png").similar(0.96))
    type(Key.TAB)
    type("s")
    type(Key.TAB)
    type(Key.SPACE)
    wait(Pattern("Theselectedi.png").similar(0.95))
    type(Key.F4)
    type(Key.TAB)
    type(Key.ENTER)
    waitVanish(Pattern("Theselectedi-1.png").similar(0.94))
    type("o", KeyModifier.ALT)
    waitVanish(Pattern("Theselection.png").similar(0.96))
    assert exists(Pattern("iewinSelecte.png").similar(0.96))
    wait(.5)
    keyDown(Key.SHIFT)
    keyDown(Key.CTRL)
    type("f")
    keyUp(Key.SHIFT)
    keyUp(Key.CTRL)
    wait(Pattern("Theselection.png").similar(0.96))
    for x in range(1, 4):
        TABFunction.tab(x)
    type(Key.SPACE)
    type("o", KeyModifier.ALT)
    waitVanish(Pattern("Theselection.png").similar(0.96))
        #-----section below tests/asserts New and Duplicate options-----#

    type("n", KeyModifier.CTRL)
    assert exists(Pattern("IDNew-1.png").similar(0.96))    
    keyDown(Key.SHIFT)
    keyDown(Key.CTRL)
    type("d")
    keyUp(Key.SHIFT)
    keyUp(Key.CTRL)            
    assert exists(Pattern("Cannotdtplca.png").similar(0.94))
    type(Key.ENTER)
    type(Key.F4, KeyModifier.CTRL)
        #-----section below tests/asserts revert function-----#
    OpenOldSlipEntry.open_slip_old()
    #click("1353010884751.png")
    wait("SlipEntry-2.png")
    type("e")
    type(Key.ESC)
    wait(Pattern("Revert-1.png").similar(0.95))
    assert exists(Pattern("SageTimeslip.png").similar(0.95))
    type("n")
    waitVanish(Pattern("SageTimeslip.png").similar(0.95))
    assert exists(Pattern("1353005764458.png").similar(0.94))
    type(Key.ESC)
    wait(Pattern("Revert-1.png").similar(0.95))
    type("y")
    assert exists(Pattern("1353005831027.png").similar(0.94))
    wait(.5)
    
        #-----section below will only work on new slip entry as export is broken in old-----#    
    #rightClick(Pattern("1353012338180.png").similar(0.94))
    #wait(.5)
    #assert exists(Pattern("Isem.png").similar(0.94))
    #type(Key.ESC)
    #type(Key.TAB)
    #type(Key.TAB)
    #type("Sikuli Test Task")
    #type(Key.TAB)
    #type("Sikuli Test Client")
    #wait(.5)
    #type("s", KeyModifier.CTRL)
    #rightClick(Pattern("1353012338180.png").similar(0.94))
    #wait(.5)
    #assert exists(Pattern("QExport.png").similar(0.92))
    #type("x")
    #wait(Pattern("OverviewTfis.png").similar(0.96))
    #assert exists(Pattern("OverviewTfis.png").similar(0.96))
    #type(Key.ESC)
        #-----Document Explore option -----#
    type(Key.TAB)
    type("slip extended funct tk")
    wait(.2)
    type(Key.TAB)
    type("slip extended funct task")
    wait(.2)
    type(Key.TAB)
    type("slip extended funct client")
    wait(.2)
    type(Key.TAB)
    type("slip extended funct reference")
    wait(.2)
    type("s", KeyModifier.CTRL)
    wait(Pattern("WarningN0Tim.png").similar(0.91))   
    assert exists(Pattern("WarningN0Tim.png").similar(0.91))
    rightClick(Pattern("1353012338180.png").similar(0.94))
    wait("NewDuulicate.png")
    type("o")
    wait(Pattern("maindbDocsSi.png").similar(0.97), FOREVER)
    assert exists(Pattern("maindbDocsSi.png").similar(0.97))
    type(Key.F4, KeyModifier.ALT)
    wait(.5)"""
    
        #-----section below tests/asserts attachment options -----# #only test in NEW slip entry)
    click(Pattern("Attadrnents.png").similar(0.98))
    rightClick(Pattern("1353012338180.png").similar(0.94))
    type("c")
    wait(Pattern("SelectSource.png").similar(0.91))
    assert exists(Pattern("Sources.png").similar(0.95))
    type(Key.ESC)
    waitVanish(Pattern("SelectSource.png").similar(0.91))
    keyDown(Key.SHIFT)
    for x in range(1, 7):
        TABFunction.tab(x)
    keyUp(Key.SHIFT)
    wait(.5)
    type("b", KeyModifier.ALT)
    wait(Pattern("LookilSbMtac.png").similar(0.92), 60)
    paste(r'c:\sikuli scripts\attachments')
    type(Key.ENTER)
    type(Key.TAB, KeyModifier.SHIFT)
    type("calc")
    wait(.5)
    type("o", KeyModifier.ALT)
    waitVanish(Pattern("Lookil.png").similar(0.93))
    type("s", KeyModifier.CTRL)
    assert exists(Pattern("ABdIIIEIICSl.png").similar(0.96))
    click(Pattern("Viewattadwme.png").similar(0.96))
    wait(Pattern("Timeslips201.png").similar(0.93))
    type(Key.F4, KeyModifier.ALT)
    waitVanish(Pattern("Timeslips201.png").similar(0.93))
    rightClick(Pattern("1353448238790.png").similar(0.94))
    type("c")
    wait(Pattern("Doyouwanttou.png").similar(0.95))
    type("y")
    waitVanish(Pattern("Doyouwanttou.png").similar(0.95))
    onAppear(Pattern("Sources-1.png").similar(0.92), type(Key.ESC))
    rightClick(Pattern("1353448238790.png").similar(0.94))
    type("c")
    onAppear(Pattern("Doyouwanttou.png").similar(0.95), type("n"))
    waitVanish(Pattern("Doyouwanttou.png").similar(0.95))
    onAppear(Pattern("Sources-1.png").similar(0.92), type(Key.ESC))
    wait(.5)
           
    click(Pattern("Attadrnents-1.png").similar(0.95))
        #-----Section below tests and asserts bookmark and slip notes-----#
    assert exists(Pattern("1353440839554.png").similar(0.93))
    keyDown(Key.SHIFT)
    keyDown(Key.CTRL)
    type("k")      
    keyUp(Key.SHIFT)
    keyUp(Key.CTRL)
    wait(.5)
    assert exists(Pattern("1353440889797.png").similar(0.96))
    keyDown(Key.SHIFT)
    keyDown(Key.CTRL)
    type("k")      
    keyUp(Key.SHIFT)
    keyUp(Key.CTRL)
    wait(.5)
    click(Pattern("1353440969158.png").similar(0.95))
    wait(Pattern("SlibNotes.png").similar(0.94))
    paste("Slip Notes for Automation Testing")
    click(Pattern("1353441569472.png").similar(0.96))
    waitVanish(Pattern("SlibNotes.png").similar(0.94))
    assert exists(Pattern("1353441692757.png").similar(0.96))
   
        #-----Section below tests fields and negative exceptions-----#
    wait(.5)
    rightClick(Pattern("Extra.png").similar(0.94)) 
    wait(.5)
    assert exists(Pattern("CtrIZCtrIXCt.png").similar(0.91))
    type(Key.ESC)
    paste("ONLYTHISMUCHFITS")
    type("a", KeyModifier.CTRL)
    rightClick(Pattern("ENLYTHISMUCH.png").similar(0.93))
    wait(.5)
    assert exists(Pattern("CtrIZCtrIXCt-1.png").similar(0.92))
    type(Key.ESC)
    wait(.5)
    type(Key.TAB)
    type(Key.TAB)
    type("1111111")
    type(Key.TAB)
    onAppear("TheStartDate.png", type(Key.ENTER))
    wait(.5)
    paste("aaaaaa")
    type(Key.TAB)
    onAppear("TheStartDate.png", type(Key.ENTER))
    wait(.5)
    paste("!@#$%^")
    type(Key.TAB)
    onAppear("TheStartDate.png", type(Key.ENTER))
    wait(.5)
    paste("-111111")
    type(Key.TAB)
    onAppear("TheStartDate.png", type(Key.ENTER))
    wait(.5)
    type("t")
    type(Key.TAB)
    type(Key.TAB)
    wait(.5)
    paste("-111111")
    type(Key.TAB)
    onAppear(Pattern("TheHeldFrneE.png").similar(0.94), type(Key.ENTER))
    wait(.5)
    paste("aaaaaa")
    type(Key.TAB)
    onAppear(Pattern("TheHeldFrneE.png").similar(0.94), type(Key.ENTER))
    wait(.5)
    paste("111111")
    type(Key.TAB)
    onAppear(Pattern("TheEeldirneE.png").similar(0.94), type(Key.ENTER))
    wait(.5)
    paste("!@#$%^")
    type(Key.TAB)
    onAppear(Pattern("TheHeldFrneE.png").similar(0.94), type(Key.ENTER))
    wait(.5)
    paste("0:30:00")
    type(Key.TAB)
    wait(.5)
    assert exists(Pattern("03000.png").similar(0.94))
    wait(.5)
    paste("-111111")
    type(Key.TAB)
    onAppear(Pattern("TheHeldFrneE.png").similar(0.94), type(Key.ENTER))
    wait(.5)
    paste("aaaaaa")
    type(Key.TAB)
    onAppear(Pattern("TheHeldFrneE.png").similar(0.94), type(Key.ENTER))
    wait(.5)
    paste("111111")
    type(Key.TAB)
    onAppear(Pattern("TheEeldirneE.png").similar(0.94), type(Key.ENTER))
    wait(.5)
    paste("!@#$%^")
    type(Key.TAB)
    onAppear(Pattern("TheHeldFrneE.png").similar(0.94), type(Key.ENTER))
    wait(.5)
    paste("1:00:00")
    type(Key.TAB)
    wait(.5)
    assert exists(Pattern("10000.png").similar(0.97))
    wait(.5)
    type(Key.F4, KeyModifier.CTRL)
    onAppear("Doyouwantsav.png", type("y"))
    wait(.5)
    type("s", KeyModifier.CTRL)
    waitVanish(Pattern("1353450048570.png").similar(0.95))
    type("w", KeyModifier.CTRL)
    
    #CreateCalendarEntry.create_calendar_entry() 
    wait(.5)
    #type(Key.F4, KeyModifier.CTRL) #use with create calendar entry      
    
                        
ts_expanded_functions()