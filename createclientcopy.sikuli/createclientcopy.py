from sikuli import*
import TABFunction
import CreateTimekeeper
import CreateCustom
import logging
reload(logging)
import datetime
import logging
import os
import subprocess
import TABFunction
import shutil
SCR0 = Screen(0)
SCR1 = Screen(1)
startTime = datetime.datetime.now()


#---------------------------------------Old Client Info Dialog----------------------------------------------#
def create_client(id):
    type("n", KeyModifier.ALT)
    type("i")
    type("n", KeyModifier.CTRL)
    wait("MClassificat.png", 30)
    paste ("Sikuli Test Client " + str(id))
    type(Key.TAB)
    type(Key.TAB)
    type(Key.TAB)
    type(Key.ENTER)
    wait(.5)
    paste("Sikuli Test Client Full Name")
    type(Key.TAB)
    paste("Address1")
    type(Key.TAB)
    paste("Address2")
    type(Key.TAB)
    paste("Address3")
    type(Key.TAB)
    paste("City")
    type(Key.TAB)
    paste("State")
    type(Key.TAB)
    paste("ZIP")
    type(Key.TAB)
    paste("Country")
    type(Key.TAB)
    type(Key.TAB)
    paste("555-555-5555")
    type(Key.TAB)
    type(Key.TAB)
    paste("555-555-5555")
    type(Key.TAB)
    type(Key.TAB)
    paste("555-555-5555")
    type(Key.TAB)
    type(Key.TAB)
    paste("555-555-5555")
    type(Key.TAB)
    type(Key.TAB)
    paste("example@example.com")
    type(Key.TAB)
    paste("example@example.com")
    type(Key.TAB)
    type(Key.TAB)
    type(Key.TAB)
    type(Key.TAB)
    type(Key.TAB)
    type("In reference to field")
    wait(1)
    type(Key.F6)
    wait(Pattern("Hatetable.png").similar(0.96))
    paste("100")
    type(Key.TAB)
    paste("200")
    wait(.5)
    keyDown(Key.SHIFT)
    for x in range(1, 7):
        TABFunction.tab(x)
    keyUp(Key.SHIFT)
    type(Key.DOWN)
    keyDown(Key.SHIFT)
    for x in range(1, 3):
        TABFunction.tab(x)
    keyUp(Key.SHIFT)
    type(Key.SPACE)
    wait(Pattern("NOTEWhenLeve.png").similar(0.80))
    type(Key.TAB)
    type(Key.DOWN)
    type(Key.TAB)
    type(Key.DOWN)
    type(Key.TAB)
    type("c")
    type(Key.TAB)
    type(Key.DOWN)
    type(Key.TAB)
    type(Key.ENTER)
    waitVanish(Pattern("NOTEWhenLeve.png").similar(0.80))
    type("s", KeyModifier.CTRL)
    waitVanish(Pattern("1351792567535.png").similar(0.98))
    keyDown(Key.CTRL)
    type(Key.F4)
    keyUp(Key.CTRL) 


#create_client(id)




#---------------------------------------New Client Info Dialog----------------------------------------------#

def new_create_client(id):
    type("n", KeyModifier.ALT)
    type("i")
    type("n", KeyModifier.CTRL)
    wait("1382044134932.png", 30)
    paste("Sikuli Test Client " + str(id))
    type(Key.TAB)
    paste(str(id))
    type(Key.TAB)
    type(Key.TAB)
    type(Key.TAB)
    type(Key.ENTER)
    wait("1382107321575.png", 30)
    paste("Sikuli Test Client Full Name")
#----------------------Primary Address 1------------------------------#
    type(Key.TAB)
    paste("1st Address1")
    type(Key.TAB)
    paste("1st Address2")
    type(Key.TAB)
    paste("1st Address3")
    type(Key.TAB)
    paste("City 1")
    type(Key.TAB)
    paste("State 1")
    type(Key.TAB)
    paste("ZIP 1")
    type(Key.TAB)
    paste("Country 1")
#-------------------Secondary Address-----------------------------#
    type(Key.TAB)
    paste("2nd Address1")
    type(Key.TAB)
    paste("2nd Address2")
    type(Key.TAB)
    paste("2nd Address3")
    type(Key.TAB)
    paste("City 2")
    type(Key.TAB)
    paste("State 2")
    type(Key.TAB)
    paste("ZIP 2")
    type(Key.TAB)
    paste("Country 2")
#--------------------Phone & email-----------------------#
    type(Key.TAB)
    type(Key.TAB)
    paste("555-555-5555")
    type(Key.TAB)
    paste("555-555-5555")
    type(Key.TAB)
    paste("555-555-5555")
    type(Key.TAB)
    paste("555-555-5555")
    type(Key.TAB)
    paste("example@example.com")
    type(Key.TAB)
    paste("example@example.com")
    type(Key.TAB)
    type(Key.SPACE)
    wait(1)
#----------------In Reference To Section---------------#
    type(Key.F6)
    paste("In reference to field")
    wait(1)
#---------------------Rates-----------------------#
    type(Key.F6)
    wait(Pattern("1382453906093.png").similar(0.84), 30)
    paste("100")
    type(Key.TAB)
    paste("200")
    wait(.5)
    keyDown(Key.SHIFT)
    for x in range(1, 10):
        TABFunction.tab(x)
    keyUp(Key.SHIFT)
    type('p')
    
    for x in range(1, 4):
        TABFunction.tab(x)
   
    type(Key.SPACE)
    wait(Pattern("1382453962064.png").similar(0.82), 30)
    type(Key.DOWN)
    type(Key.TAB)
    type(Key.DOWN)
    type(Key.TAB)
    type("p")
    type(Key.TAB)
    type(Key.DOWN)
    type(Key.TAB)
    type(Key.ENTER)
    waitVanish(Pattern("1382453962064.png").similar(0.82))
    type("s", KeyModifier.CTRL)
    waitVanish(Pattern("1351792567535.png").similar(0.98))
    if exists("Whenyousavea.png"):
        type('o')
        waitVanish("Whenyousavea.png")
        if exists("Noconflictsw.png"):
            type(Key.ENTER)
        if exists("ScopeOptions.png"):
            type(Key.F4, KeyModifier.CTRL)           
            waitVanish("ScopeOptions.png")    
    keyDown(Key.CTRL)
    type(Key.F4)
    keyUp(Key.CTRL) 

"""
for x in range(1, 2):
    new_create_client(x)"""









#------------------------Client Regression Function--------------------------#

#For this regression test, make sure to run this test after the main smoke test has created its test DB or if 
#you plan on running it on its own, then make sure to run the Create Timekeeper function and the Create Custom function



def create_client_regression(id):
#----------Create Timekeeper and Custon functions below are to be run if running this regression test on its own-------#
    #CreateTimekeeper.create_timekeeper(x)
    #CreateCustom.create_customfields()
#----------Information Group--------------#
    type("n", KeyModifier.ALT)
    type("i")
    type("n", KeyModifier.CTRL)
    wait("1382044134932-2.png", 30)
    paste("Sikuli Regression Client " + str(id))
    type(Key.TAB)
    paste(str(id))
    type(Key.TAB)
    type(Key.TAB)
    type(Key.TAB)
    type(Key.ENTER)
    wait("1382107321575-2.png", 30)
    paste("Sikuli Regression Client Full Name")
    #----------------------Primary Address 1------------------------------#
    type(Key.TAB)
    paste("1st Address1")
    type(Key.TAB)
    paste("1st Address2")
    type(Key.TAB)
    paste("1st Address3")
    type(Key.TAB)
    paste("City 1")
    type(Key.TAB)
    paste("State 1")
    type(Key.TAB)
    paste("ZIP 1")
    type(Key.TAB)
    paste("Country 1")
    #-------------------Secondary Address-----------------------------#
    type(Key.TAB)
    paste("2nd Address1")
    type(Key.TAB)
    paste("2nd Address2")
    type(Key.TAB)
    paste("2nd Address3")
    type(Key.TAB)
    paste("City 2")
    type(Key.TAB)
    paste("State 2")
    type(Key.TAB)
    paste("ZIP 2")
    type(Key.TAB)
    paste("Country 2")
    #--------------------Phone & email-----------------------#
    type(Key.TAB)
    type(Key.TAB)
    paste("555-555-5555")
    type(Key.TAB)
    paste("555-555-5555")
    type(Key.TAB)
    paste("555-555-5555")
    type(Key.TAB)
    paste("555-555-5555")
    type(Key.TAB)
    paste("example@example.com")
    type(Key.TAB)
    paste("example@example.com")
    type(Key.TAB)
    type(Key.SPACE)
    wait(1)
    #----------------In Reference To Group---------------#
    type(Key.F6)
    paste("In reference to field")
    wait(1)
    #---------------------Rates Group-----------------------#
    type(Key.F6)
    wait(Pattern("1382453906093-2.png").similar(0.84), 30)
    paste("100")
    type(Key.TAB)
    paste("200")
    wait(.5)
    keyDown(Key.SHIFT)
    for x in range(1, 10):
        TABFunction.tab(x)
    keyUp(Key.SHIFT)
    type('p')   
    for x in range(1, 4):
        TABFunction.tab(x)    
    type(Key.SPACE)
    wait(Pattern("1382453962064-2.png").similar(0.82), 30)
    type(Key.DOWN)
    type(Key.TAB)
    type(Key.DOWN)
    type(Key.TAB)
    type("p")
    type(Key.TAB)
    type(Key.DOWN)
    type(Key.TAB)
    type(Key.ENTER)
    waitVanish(Pattern("1382453962064-2.png").similar(0.82))
    #-------------Custom Grouo-----------------#
    type(Key.F6)
    paste(r'1/1/2013')
    type(Key.TAB)
    paste('1')
    type(Key.TAB)
    type('li')
    type(Key.TAB)
    paste('100')
    type(Key.TAB)
    paste('200')
    type(Key.TAB)
    paste('100')
    type(Key.TAB)
    paste('Text')
    type(Key.TAB)
    type('sik')
    #------Verifying Custom Changes are saved--------#
    assert exists(Pattern("CustomFields.png").similar(0.90))
    
    #------------------Bills Group-------------------#
    #--------Set Billing arrangements for time and expense sections---------#    
    type(Key.F6)
    type(Key.DOWN)
    onAppear(Pattern("TheFullBilla-1.png").similar(0.87), type('n', KeyModifier.ALT))
    waitVanish(Pattern("TheFullBilla-1.png").similar(0.87))
    type(Key.TAB)
    type('ad')
    wait(.5)
    type(Key.TAB)
    type(Key.ENTER)
    wait("Anadjustment.png", 30)
    type('n', KeyModifier.ALT)
    onAppear("1392322336051.png", paste('500'))
    type(Key.ENTER)
    waitVanish("1392322336051.png")
    type(Key.ENTER)
    waitVanish("Anadjustment.png")
    type(Key.TAB)
    type('ad')
    wait(.5)
    type(Key.TAB)
    type(Key.ENTER)
    wait("Anadjustment.png", 30)
    type('n', KeyModifier.ALT)
    onAppear("1392322336051.png", paste('250'))
    type(Key.ENTER)
    waitVanish("1392322336051.png")
    type(Key.ENTER)
    waitVanish("Anadjustment.png")
    #--------Verifying all changes are saved----------#
    assert exists(Pattern("BillingArran-1.png").similar(0.93))
    #----------Set Hold Information Settings---------#
    type(Key.F6)
    type('on')
    wait(.5)
    type(Key.TAB)
    paste('500')
    wait(.5)
    type(Key.TAB)
    paste('5')
    wait(.5)
    type(Key.TAB)
    type('on')
    wait(.5)
    type(Key.TAB)
    paste('250')
    type(Key.TAB)
    type('on')
    wait(.5)
    type(Key.TAB)
    paste('1000')
    type(Key.TAB)
    paste('10')
    type(Key.TAB)
    type('on')
    #--------Verifying all changes are saved----------#
    assert exists(Pattern("HoldInformat.png").similar(0.91))
    #--------------------Charges Group-------------------#
    #-------Tax Profile-------#
    type(Key.F6)
    type('ga')
    type(Key.TAB)
    type(Key.SPACE)
    type(Key.TAB)
    #-------------Adjustment to individual charges------------#
    paste('5')
    type(Key.TAB)
    type('un')
    wait(.5)
    type(Key.TAB)
    type(Key.UP)
    type(Key.TAB)
    paste('50')
    type(Key.TAB)
    #------------------------Interest------------------------#
    paste('18.99')
    type(Key.TAB)
    type('si')
    wait(.5)
    type(Key.TAB)
    type('60')
    wait(.5)
    type(Key.TAB)
    type('30')
    wait(.5)
    type(Key.TAB)
    paste(r'1/1/2013')
    type(Key.TAB)
    #------------------Finance Charge--------------------#
    type('ne')
    wait(.5)
    type(Key.TAB)
    paste('100')
    type(Key.TAB)
    paste('Finance Charge Description')
    #------------Discount Section--------------#
    type(Key.TAB)
    paste('50')
    type(Key.TAB)
    paste('30')
    type(Key.TAB)
    type(Key.DOWN + Key.DOWN + Key.DOWN)
    #-------Verifying all changes are saved correctly---------#
    assert exists(Pattern("TaxesTaxprof-1.png").similar(0.90))
    #----------------invoice Numbering-----------------#
    type(Key.F6)
    type(Key.DOWN)
    type(Key.TAB)
    paste('1000')
    type(Key.TAB)
    #-------Pay Dist Rule--------#
    type(Key.TAB)
    type('n')
    type(Key.TAB)
    type('f')
    type(Key.TAB)
    type('c')
    type(Key.TAB)
    type(Key.SPACE)
    #----------------Email Options-------------------#
    type(Key.TAB)
    type(Key.SPACE)
    click(Pattern("1392329719490-1.png").similar(0.92))
    onAppear("Youcanusethe-3.png", type('n', KeyModifier.ALT))
    wait("NameSubjectB-1.png", 90)
    paste('Sikuli Regression Email Template')
    type('b', KeyModifier.ALT)
    paste('Sikuli Email Template')
    type('o', KeyModifier.ALT)
    paste('This is just test text for an email template during regression testing')
    type(Key.TAB)
    type(Key.ENTER)
    if exists("ThefieldName.png"):
        type(Key.ENTER)
        type(Key.ESC)
    waitVanish("NameSubjectB-1.png")
    type(Key.ENTER)
    waitVanish("Youcanusethe-3.png")
    type(Key.TAB)
    type('sik')
    type(Key.TAB)
    type(Key.SPACE)
    #-------Verifying all changes are saved correctly---------#
    assert exists(Pattern("Invoicenumbe.png").similar(0.92))
   